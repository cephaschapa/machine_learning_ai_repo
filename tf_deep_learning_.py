# -*- coding: utf-8 -*-
"""TF Deep Learning .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13-aA8G6WfXteZ3Eawjk4b_tzbL_CkIYx
"""

import tensorflow as tf
# tf.logging.set_verbosity(tf.logging.ERROR)

import numpy as np

celcius_q = np.array([-40,-10,0,8,15,22,38], dtype=float)
fahrenheit_a = np.array([-40, 14, 32,46,59,72,100], dtype=float)

for i, c in enumerate(celcius_q):
  print("{} degrees Celcius = {} degrees Fahrenheit".format(c, fahrenheit_a[i]))

lO = tf.keras.layers.Dense(units=1, input_shape=[1])

model = tf.keras.Sequential([lO])

model.compile(loss='mean_squared_error', optimizer=tf.keras.optimizers.Adam(0.1))

history = model.fit(celcius_q, fahrenheit_a, epochs=500, verbose=False)
print("Finished training the model")

import matplotlib.pyplot as plt
plt.xlabel('Epoch Number')
plt.ylabel('Loss Magnitude')
plt.plot(history.history['loss'])

print(model.predict([0]))

print("These are layer variablesL {}".format(lO.get_weights()))

